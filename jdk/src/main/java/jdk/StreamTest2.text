//package jdk;
//
//import org.junit.Test;
//
//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
//import java.util.stream.Collectors;
//import java.util.stream.Stream;
//
//import static org.elasticsearch.common.Strings.isNullOrEmpty;
//
///**
// * Created by wanggen/付笑 on 2016-07-13.
// */
//public class StreamTest2 {
//
//	@Test
//	public void test2() {
//
//		List<String> rawRows = new ArrayList<>();
//		rawRows.add("lee,23,hz");
//		rawRows.add("alen,28,newyork");
//		rawRows.add("hanm,25,beijing");
//		rawRows.add("lei,24,beijing");
//		rawRows.add("silen,27,");
//
//		// 1. 分隔字符串为行
//		List<String[]> rows = new ArrayList<>();
//		for (String rawRow : rawRows) {
//			String[] cols = rawRow.split(",");
//			if (cols.length == 3 && !isNullOrEmpty(cols[2]))
//				rows.add(rawRow.split(","));
//		}
//
//		// 2. 按地区分组
//		Map<String, List<String[]>> byAddr = new HashMap<>();
//		for (String[] row : rows) {
//			List<String[]> rows1 = byAddr.get(row[2]);
//			if (rows1 == null) {
//				rows1 = new ArrayList<>();
//				byAddr.put(row[2], rows1);
//			}
//			rows1.add(row);
//		}
//
//		// 3. 按分组聚合每组数据
//		Map<String, Double> avg = new HashMap<>();
//		for (String addr : byAddr.keySet()) {
//			double         ageSum = 0, ageAve = 0;
//			List<String[]> rows2  = byAddr.get(addr);
//			for (String[] line : rows2) {
//				ageSum += Integer.parseInt(line[1]);
//			}
//			ageAve = ageSum / rows2.size();
//			avg.put(addr, ageAve);
//		}
//
//		System.out.println(avg);
//
//
//	}
//
//
//	@Test
//	public void test1() {
//
//		// 需求: 对一个地址表中求每个地区的平均年龄
//		// SELECT AVG(age),address
//		//   FROM user_infos
//		// GROUP BY address
//
//		Object rst = Stream.of(
//						"lee,23,hz",
//						"alen,28,newyork",
//						"hanm,25,beijing",
//						"lei,24,beijing",
//						"silen,27,")
//						.distinct()
//						.map(l -> l.split(","))
//						.filter(l -> l.length == 3 && !isNullOrEmpty(l[2]))
//						.collect(Collectors.groupingBy(line -> line[2], Collectors.averagingInt(o -> Integer.parseInt(o[1]))));
//
//		System.out.println(rst);
//
//	}
//
//
//	@Test
//	public void test3(){
//
//
//
//
//	}
//
//
//
//
//
//}
